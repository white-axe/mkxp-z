# Fixes compilation errors when compiling liblzma in MSYS2 and for homebrew consoles.

diff --git a/CMakeLists.txt b/CMakeLists.txt
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -204,7 +204,6 @@ if((MINGW OR CYGWIN) AND (
     # in PACKAGE_NAME_DEFINITION works with gcc and clang too so we don't need
     # to worry how to pass different flags to windres and the C compiler.
     # Keep the original PACKAGE_NAME intact for generation of liblzma.pc.
-    string(APPEND CMAKE_RC_FLAGS " --use-temp-file")
     string(REPLACE " " "\\x20" PACKAGE_NAME_DEFINITION "${PACKAGE_NAME}")
 
     # Use octal because "Program Files" would become \x20F.
@@ -1113,23 +1112,6 @@ target_compile_definitions(liblzma PRIVATE TUKLIB_SYMBOL_PREFIX=lzma_)
 tuklib_cpucores(liblzma)
 tuklib_physmem(liblzma)
 
-# While liblzma can be built without tuklib_cpucores or tuklib_physmem
-# modules, the liblzma API functions lzma_cputhreads() and lzma_physmem()
-# will then be useless (which isn't too bad but still unfortunate). Since
-# I expect the CMake-based builds to be only used on systems that are
-# supported by these tuklib modules, problems with these tuklib modules
-# are considered a hard error for now. This hopefully helps to catch bugs
-# in the CMake versions of the tuklib checks.
-if(NOT TUKLIB_CPUCORES_FOUND OR NOT TUKLIB_PHYSMEM_FOUND)
-    # Use SEND_ERROR instead of FATAL_ERROR. If someone reports a bug,
-    # seeing the results of the remaining checks can be useful too.
-    message(SEND_ERROR
-            "tuklib_cpucores() or tuklib_physmem() failed. "
-            "Unless you really are building for a system where these "
-            "modules are not supported (unlikely), this is a bug in the "
-            "included cmake/tuklib_*.cmake files that should be fixed. "
-            "To build anyway, edit this CMakeLists.txt to ignore this error.")
-endif()
 
 # Check for __attribute__((__constructor__)) support.
 # This needs -Werror because some compilers just warn
@@ -1747,7 +1729,7 @@ endif()
 # xz
 #############################################################################
 
-if(NOT MSVC OR MSVC_VERSION GREATER_EQUAL 1900)
+if(FALSE)
     add_executable(xz
         src/common/mythread.h
         src/common/sysdefs.h
